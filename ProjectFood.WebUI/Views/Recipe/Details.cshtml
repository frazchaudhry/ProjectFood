@using Microsoft.AspNet.Identity
@using ProjectFood.WebUI.Infrastructure
@model ProjectFood.Domain.Entities.Recipe
<link href="~/Content/css/Recipe/Detail.css" rel="stylesheet" />
@{
    ViewBag.Title = Model.RecipeName;
    var ingredientCount = RecipeHelper.GetIngredientList(Model.Ingredients).Count;
    var ingredients = RecipeHelper.GetIngredientList(Model.Ingredients);
    var column = 1;
}

<h2>@Model.RecipeName</h2>

<div>
    @*<h4>@Model.RecipeName</h4>*@
    <hr/>
    <div class="row">
        <div class="col-md-4">
            <img src="@Url.Action("GetImage", "Recipe", new {recipeId = Model.RecipeId})" style="width: 100%"/>
        </div>
        <div class="col-md-8">
            @Html.DisplayFor(m => m.RecipeDescription)
        </div>
    </div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
        </dt>

        <dd>
            @Html.DisplayFor(m => m.Category.CategoryName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Region.RegionName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Region.RegionName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ingredients)
        </dt>

        <dd>
            <table class="table table-striped">
                @for (int i = 0; i < ingredientCount; i++)
                {
                    <tr>
                        <td>@ingredients[i++]</td>
                        @if (i < ingredientCount)
                        {
                            <td>@ingredients[i]</td>
                        }
                    </tr>
                }
            </table>
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Directions)
        </dt>

        <dd>
            @Html.Raw(Model.Directions)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.Likes)
        </dt>*@

        @*<dd>
            @Html.DisplayFor(model => model.Likes)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Dislikes)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Dislikes)
        </dd>*@
    </dl>
</div>
<p>
    @if (User.Identity.IsAuthenticated && (User.IsInRole("Administrators") || Model.UserId == Int32.Parse(User.Identity.GetUserId())))
    {
        @Html.ActionLink("Edit", "Edit", new {id = Model.RecipeId}, new {@class = "btn btn-primary"}) @:|
    }
    @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-default"})
</p>

<div style="width: 800px; margin: 0 auto;">
    <div class="detailBox">
        <div class="titleBox">
            <label>Comments</label>
            <button type="button" class="close" aria-hidden="true">&times;</button>
        </div>
        <div class="commentBox">

            <p class="taskDescription">Like this recipe? We'd love you hear your feedback in the comments below!</p>
        </div>
        <div class="actionBox">
            <ul class="commentList">
                @foreach (var comment in Model.Comments)
                {
                    <li>
                        <div class="commenterImage">
                            <img src="@Url.Action("GetImage", "Account", new {userId = comment.UserId})"/>
                        </div>
                        <div class="commentText">
                            <label style="font-size: 80%">@Html.GetUserName(comment.UserId)</label>
                            <p class="">@comment.CommentText</p> <span class="date sub-text">on @String.Format("{0:r}", comment.CreateDateTime)</span>

                        </div>
                    </li>
                }
                @*<li>
                    <div class="commenterImage">
                        <img src="http://lorempixel.com/50/50/people/6"/>
                    </div>
                    <div class="commentText">
                        <p class="">Hello this is a test comment.</p> <span class="date sub-text">on March 5th, 2014</span>

                    </div>
                </li>
                <li>
                    <div class="commenterImage">
                        <img src="http://lorempixel.com/50/50/people/7"/>
                    </div>
                    <div class="commentText">
                        <p class="">Hello this is a test comment and this comment is particularly very long and it goes on and on and on.</p> <span class="date sub-text">on March 5th, 2014</span>

                    </div>
                </li>
                <li>
                    <div class="commenterImage">
                        <img src="http://lorempixel.com/50/50/people/9"/>
                    </div>
                    <div class="commentText">
                        <p class="">Hello this is a test comment.</p> <span class="date sub-text">on March 5th, 2014</span>

                    </div>
                </li>*@
            </ul>
            <div class="form-inline">
                <input type="hidden" id="RecipeId" name="RecipeId" value="@Model.RecipeId" />
                @if (User.Identity.IsAuthenticated)
                {
                    var userId = Int32.Parse(User.Identity.GetUserId());
                    <input type="hidden" id="UserId" name="UserId" value="@userId"/>
                    <input type="hidden" id="connectionId" name="connectionId" value=""/>
                    <div class="form-group">
                        <textarea id="CommentText" name="CommentText" class="input-sm form-control" placeholder="Your Comments" rows="2" cols="100"></textarea>
                    </div>
                    <div class="form-group">
                        <button id="btnAddMessage" class="btn btn-default">Add</button>
                    </div>
                }
                else
                {
                    var returnUrl = HttpContext.Current.Request.RawUrl;
                    <div class="form-group">
                        <p class="lead">You need to be logged in to comment!</p>
                    </div>
                    <div class="form-group">
                        @Html.ActionLink("Log In", "Login", "Account", new {returnUrl}, new {@class = "btn btn-primary"})
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(function() {
        var connection = $.hubConnection();
        var hubProxy = connection.createHubProxy('commentsHub');

        connection.start().done(function() {
            $('#connectionId').val(connection.id);
        });

        $('#btnAddMessage').on('click', function() {
            var comment = {
                recipeId: $('#RecipeId').val(),
                userId: $('#UserId').val(),
                commentText: $('#CommentText').val()
            }
            $.ajax({
                url: '/recipe/details',
                type: 'POST',
                data: {
                    comment: comment
                },
                success: function (data) {
                    var commentText = data.CommentText;
                    var userId = data.UserId;
                    var userName = data.UserName;
                    var createDate = data.CreateDateTime;
                    $('.commentList').append('<li>' +
                        '<div class="commenterImage">' +
                        '<img src="/Account/GetImage?userId=' + userId + '"/>' +
                        '</div>' +
                        '<div class="commentText">' +
                        '<label style="font-size: 80%">' + userName + '</label>' +
                        '<p class="">'+ commentText +'</p> <span class="date sub-text">on '+ createDate +'</span>' +
                        '</div>' +
                        '</li>');
                    $('#CommentText').val('');
                    connection.start().done(function () {
                        hubProxy.invoke('BroadCastComment');
                    });
                },
                error: function(e) {
                    alert('Sorry an error occured. Please try again later!');
                }
            });
        });

        function refreshComments() {
            $.ajax({
                url: '/Recipe/GetRecipeCommentsForUser',
                type: 'POST',
                data: { recipeId: $('#RecipeId').val() },
                success: function(data) {
                    $('.commentList').empty();
                    for (var i = 0; i < data.length; i++) {
                        $('.commentList').append('<li>' +
                        '<div class="commenterImage">' +
                        '<img src="/Account/GetImage?userId=' + data[i].UserId + '"/>' +
                        '</div>' +
                        '<div class="commentText">' +
                        '<label style="font-size: 80%">' + data[i].UserName + '</label>' +
                        '<p class="">' + data[i].CommentText + '</p> <span class="date sub-text">on ' + data[i].CreateDateTime + '</span>' +
                        '</div>' +
                        '</li>');
                    }
                },
                error: function(e) {
                    
                }
            });
        }

        hubProxy.on('UpdateComments', function () {
            refreshComments();
        });
    })
</script>